language: cpp

sudo: required

cache:
   directories:
     - ~/.cached/OpenVisus

services:
  - docker

notifications:
  email:
    recipients:
      - scrgiorgio@gmail.com
    on_success: always
    on_failure: always 
    
env:
  global:
    - PYPI_USERNAME=scrgiorgio
    - secure: EAZwSiQCFdTjcKDmHLFpWgX7WnGKwTtptkTvXYLcMPSUMxGymTCOTI1h8jjhxGig3k4Jni1X1gx9c8+LkcMd/yjbzDiOnIjCAVRc1hmCijAgu9j3G1ZMll4E38T7Iq6jE3/DZyb7pfK3X4NQopF/5uySIGeoH25CHwcNyr36k8Ba+qYtanPwTG1D+EVIago8qqL5yG5rslAf7Y69+zVbNa/JAUhow4fw0RAwVp+kgMC7Fj7iSMuN4NmS176VZEjD593zbiBgW+veEN0Z2MLD4vG7nq+w5u5JJYuz+Q4EiB5CCek5hhj17fJMWuAA23RZAlq4X/2oS5bKg/etHK5iVeM8ODKBX2bBHOxQoqwOaOVf0sEs5ranwVLR/77FrhFEECKAmkfFHwGGViWTvdE+F/7XqjLQK9Zm2f+T+rMHxrm1RknbXz271TNahqCHnMsmpaz98WbBHjdp2aQfU+nV/l6XLJnAf0R58ISiVdnDOy3BgQsiWIyxjZc6gRSwLg6EzAS2XlgQOmXhDo8lYoaepuK4OWvdIf+bqw0Y3b0uvrpHlAEpIG0tzzZw6ldq3CdvKD+46Vz+ZtEQBi0GBPy1Env1RHILzlkUwn6LSjVnKYY/TZxIi4ha73yo2BwJ1Q6hpdjVFgHJkEY3a72UCnOBIVnaalGv9lu/EjaixrnU6Nc=  
    - secure: IKXyv5dk82z3xkFifYIGTMiiTT2eqpCQgq5F/ZIhoPoBJIXlT5ufc9kQ66JajuXvrmIa1TTMjAxd2ayRBhzXRJNtk4ygNNtpChtysTGB7m/PSW6OwqpsPDPq3t6aYI2wE8SzATZmyO49KflEyFEjdGTugvuqf0t+aCRPfAcbCsrSdb+X6tCg+rgYGwXlFGv6oR2akgYZkPDT2WMV7jG153CiSPqympvhBiCdYygUbtBFgqW/hA5X10yqfKIXwRAeEsOma7DlVIliviEJWfXzjbhxAc0shSuJ+/q/iMvAyWs/n1TDiELL+SGlD2RNmyzDsRP/KLJGLxko6lGFocSRD9BsweKw3HQ6q6KvmLUedXwRDg1KqQbf0kll8fJumsVr6ov78+QG7/eN3c2yk5q/rd4j9t1AvRLX9Lstu9DCm101TQv8IYKsAEiM2qVqpcHP1oiUSo31ETVu0xLH/zUK/pmlNlHTDoJHXFU7H24PdkdZqwCVSWinqePg6Tny0Gu834LhsJh+ZX+uqw0EHIEjHHvfpIAJ3x350wiuitepkYkVv+ZjqbutpHDAgDw6MxNzyaJ+qf0HAnxXV+RzciSyO9LmT61A7lyfiWGZyWOW17wjCjI/IIjDIq1f1MJkGUsuuwqGikz5wXfRj5YOykOdWI7YTsjPGMaXGwBC3mgBSCw=

conditions: v1 
  
matrix:
  fast_finish: true
  include:
  
    # ///////////////////////////////// manylinux (i.e. centos)
    # Example to compile by hand
    # sudo docker run -ti  -v $(pwd):/home/OpenVisus quay.io/pypa/manylinux1_x86_64 /bin/bash
    # cd /home/OpenVisus && PYTHON_VERSION=3.4.1 BUILD_DIR=$(pwd)/build/manylinux ./build.sh     
    
    - os: linux
      dist: trusty
      env: ['PYTHON_VERSION=3.7.1','DOCKER_IMAGE=quay.io/pypa/manylinux1_x86_64']       
      addons: 
        apt:
          packages: ['g++-4.9']
          sources: ['ubuntu-toolchain-r-test']  

    - os: linux
      dist: trusty
      env: ['PYTHON_VERSION=3.6.6','DOCKER_IMAGE=quay.io/pypa/manylinux1_x86_64']       
      addons: 
        apt:
          packages: ['g++-4.9']
          sources: ['ubuntu-toolchain-r-test']     
          
    - os: linux
      dist: trusty
      if: tag IS present OR commit_message =~ /\[full_matrix\]/
      env: ['PYTHON_VERSION=3.5.1','DOCKER_IMAGE=quay.io/pypa/manylinux1_x86_64']       
      addons: 
        apt:
          packages: ['g++-4.9']
          sources: ['ubuntu-toolchain-r-test']               

    - os: linux
      dist: trusty
      if: tag IS present OR commit_message =~ /\[full_matrix\]/
      env: ['PYTHON_VERSION=3.4.1','DOCKER_IMAGE=quay.io/pypa/manylinux1_x86_64']       
      addons: 
        apt:
          packages: ['g++-4.9']
          sources: ['ubuntu-toolchain-r-test']       

    - os: linux
      dist: trusty
      if: tag IS present OR commit_message =~ /\[full_matrix\]/
      env: ['PYTHON_VERSION=2.7','DOCKER_IMAGE=quay.io/pypa/manylinux1_x86_64']       
      addons: 
        apt:
          packages: ['g++-4.9']
          sources: ['ubuntu-toolchain-r-test']  
          
    # ///////////////////////////////// osx 10.14
    #
    # build manually since travis does not support 10.14 yet
    # note 3.7.1rc fails to compile
    #
    # for PYTHON_VERSION in 3.6.5 3.5.1 2.7.15 
    # do 
    #   export PYTHON_VERSION=${PYTHON_VERSION} 
    #   export BUILD_DIR=$(pwd)/build/osx1014/python${PYTHON_VERSION} 
    #   ./build.sh 
    #   python -m twine upload --skip-existing $(find ${BUILD_DIR} -iname "*.whl")
    # done
     
    # ///////////////////////////////// osx 10.13
    
    - os: osx
      osx_image: xcode9.4
      compiler: clang
      if: tag IS present OR commit_message =~ /\[full_matrix\]/  
      env: [PYTHON_VERSION=3.7.1]     
    
    - os: osx
      osx_image: xcode9.4 
      compiler: clang
      env: [PYTHON_VERSION=3.6.5]   
      
    - os: osx
      osx_image: xcode9.4 
      compiler: clang
      if: tag IS present OR commit_message =~ /\[full_matrix\]/  
      env: [PYTHON_VERSION=3.5.1]                          
          
    - os: osx
      osx_image: xcode9.4 
      compiler: clang
      if: tag IS present OR commit_message =~ /\[full_matrix\]/  
      env: [PYTHON_VERSION=2.7.15] 
      
    # ///////////////////////////////// osx 10.12
    
    - os: osx
      osx_image: xcode8.3
      compiler: clang
      if: tag IS present OR commit_message =~ /\[full_matrix\]/
      env: ['PYTHON_VERSION=3.7.1']           
             
      
    - os: osx
      osx_image: xcode8.3
      compiler: clang
      if: tag IS present OR commit_message =~ /\[full_matrix\]/
      env: ['PYTHON_VERSION=3.6.1']      
      
    - os: osx
      osx_image: xcode8.3
      compiler: clang
      if: tag IS present OR commit_message =~ /\[full_matrix\]/
      env: ['PYTHON_VERSION=3.5.1']              
            
    - os: osx
      osx_image: xcode8.3
      compiler: clang
      if: tag IS present OR commit_message =~ /\[full_matrix\]/
      env: ['PYTHON_VERSION=2.7.14']   

    # ///////////////////////////////// trusty (Ubuntu 14.04)
    # Example to compile by hand
    # sudo docker run -ti  -v $(pwd):/home/OpenVisus ubuntu:trusty /bin/bash
    # cd /home/OpenVisus && PYTHON_VERSION=3.61 ./build.sh 
    
    #  python 3.7.1 fails to compile
       
    - os: linux
      dist: trusty
      env: ['PYTHON_VERSION=3.6.1','DOCKER_IMAGE=ubuntu:trusty']       
      addons: 
        apt:
          packages: ['g++-4.9']
          sources: ['ubuntu-toolchain-r-test']          
    
    - os: linux
      dist: trusty
      if: tag IS present OR commit_message =~ /\[full_matrix\]/
      env: ['PYTHON_VERSION=3.5.1','DOCKER_IMAGE=ubuntu:trusty']       
      addons: 
        apt:
          packages: ['g++-4.9']
          sources: ['ubuntu-toolchain-r-test']       
            
    - os: linux
      dist: trusty
      if: tag IS present OR commit_message =~ /\[full_matrix\]/
      env: ['PYTHON_VERSION=2.7','DOCKER_IMAGE=ubuntu:trusty']
      addons: 
        apt:
          packages: ['g++-4.9']
          sources: ['ubuntu-toolchain-r-test']    
          

    # ///////////////////////////////// xenial (Ubuntu 16)
    # Example to compile by hand
    # sudo docker run -ti  -v $(pwd):/home/OpenVisus ubuntu:xenial /bin/bash
    # cd /home/OpenVisus && PYTHON_VERSION=3.7.1 ./build.sh

    - os: linux
      dist: xenial
      if: tag IS present OR commit_message =~ /\[full_matrix\]/
      env: ['PYTHON_VERSION=3.7.1','DOCKER_IMAGE=ubuntu:xenial']       
      addons: 
        apt:
          packages: ['g++-4.9']
          sources: ['ubuntu-toolchain-r-test']          
       
    - os: linux
      dist: xenial
      env: ['PYTHON_VERSION=3.6.1','DOCKER_IMAGE=ubuntu:xenial']       
      addons: 
        apt:
          packages: ['g++-4.9']
          sources: ['ubuntu-toolchain-r-test']          
    
    - os: linux
      dist: xenial
      if: tag IS present OR commit_message =~ /\[full_matrix\]/
      env: ['PYTHON_VERSION=3.5.1','DOCKER_IMAGE=ubuntu:xenial']       
      addons: 
        apt:
          packages: ['g++-4.9']
          sources: ['ubuntu-toolchain-r-test']       
            
    - os: linux
      dist: xenial
      if: tag IS present OR commit_message =~ /\[full_matrix\]/
      env: ['PYTHON_VERSION=2.7','DOCKER_IMAGE=ubuntu:xenial']
      addons: 
        apt:
          packages: ['g++-4.9']
          sources: ['ubuntu-toolchain-r-test']               
             

    # ///////////////////////////////// opensuse
    # Example to compile by hand
    # sudo docker run -ti  -v $(pwd):/home/OpenVisus opensuse:leap /bin/bash
    # cd /home/OpenVisus && PYTHON_VERSION=3.7.1 ./build.sh    
    
    - os: linux
      dist: trusty
      if: tag IS present OR commit_message =~ /\[full_matrix\]/
      env: ['PYTHON_VERSION=3.7.1','DOCKER_IMAGE=opensuse:leap']
      addons: 
        apt:
          packages: ['g++-4.9']
          sources: ['ubuntu-toolchain-r-test']

    - os: linux
      dist: trusty
      if: tag IS present OR commit_message =~ /\[full_matrix\]/
      env: ['PYTHON_VERSION=3.6.6','DOCKER_IMAGE=opensuse:leap']
      addons: 
        apt:
          packages: ['g++-4.9']
          sources: ['ubuntu-toolchain-r-test']    
          
    - os: linux
      dist: trusty
      if: tag IS present OR commit_message =~ /\[full_matrix\]/
      env: ['PYTHON_VERSION=3.5.1','DOCKER_IMAGE=opensuse:leap']
      addons: 
        apt:
          packages: ['g++-4.9']
          sources: ['ubuntu-toolchain-r-test']    
          
    - os: linux
      dist: trusty
      if: tag IS present OR commit_message =~ /\[full_matrix\]/
      env: ['PYTHON_VERSION=2.7','DOCKER_IMAGE=opensuse:leap']
      addons: 
        apt:
          packages: ['g++-4.9']
          sources: ['ubuntu-toolchain-r-test']                       
          
    # ///////////////////////////////// conda (linux)
    - os: linux
      dist: trusty   
      env: ['PYTHON_VERSION=3.7','CONDA=1']       
      addons: 
        apt:
          packages: ['g++-4.9']
          sources: ['ubuntu-toolchain-r-test']  

    - os: linux
      dist: trusty
      if: tag IS present OR commit_message =~ /\[full_matrix\]/
      env: ['PYTHON_VERSION=3.6','CONDA=1']       
      addons: 
        apt:
          packages: ['g++-4.9']
          sources: ['ubuntu-toolchain-r-test']     
          
    - os: linux
      dist: trusty
      if: tag IS present OR commit_message =~ /\[full_matrix\]/
      env: ['PYTHON_VERSION=3.5','CONDA=1']           
      addons: 
        apt:
          packages: ['g++-4.9']
          sources: ['ubuntu-toolchain-r-test']               

    - os: linux
      dist: trusty
      if: tag IS present OR commit_message =~ /\[full_matrix\]/
      env: ['PYTHON_VERSION=2.7','CONDA=1']  
      addons: 
        apt:
          packages: ['g++-4.9']
          sources: ['ubuntu-toolchain-r-test']            
          

    # ///////////////////////////////// alpine (disabled)
    # - os: linux
    #   dist: trusty
    #   if: tag IS present OR commit_message =~ /\[full_matrix\]/
    #   env: ['PYTHON_VERSION=3.6','DOCKER_IMAGE=alpine:3.7','DOCKER_SHELL=/bin/sh']       
    #   addons: 
    #     apt:
    #       packages: ['g++-4.9']
    #       sources: ['ubuntu-toolchain-r-test']  
    # - os: linux 
    #   dist: trusty
    #   if: tag IS present OR commit_message =~ /\[full_matrix\]/
    #   env: ['PYTHON_VERSION=3.5','DOCKER_IMAGE=alpine:3.7','DOCKER_SHELL=/bin/sh']       
    #   addons: 
    #     apt:
    #       packages: ['g++-4.9']
    #       sources: ['ubuntu-toolchain-r-test']
script:
   - |
     set -x # Error out after first failure and print each command before executing  (not working for osx for unknown reasons)
     export VISUS_INTERNAL_DEFAULT=1
     export PRETTY_LOG=1
     export DEPLOY_PYPI=0
     export DEPLOY_CONDA=0
     
     if [[ "$TRAVIS_OS_NAME" == "osx"   ]]; then export COMPILER=clang++ ; fi
     if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export COMPILER=g++-4.9 ; fi
     
     if [[ "$CONDA" == "1" ]]; then
        
        if [[ "${TRAVIS_TAG}" != "" || "${TRAVIS_COMMIT_MESSAGE}" == *"[DEPLOY_CONDA]"* ]]; then
           echo "Doing deploy to anaconda..."
           export DEPLOY_CONDA=1
        fi
        
        # install miniconda
        cd $HOME
        wget -q https://repo.continuum.io/miniconda/Miniconda${PYTHON_VERSION:0:1}-latest-Linux-x86_64.sh -O miniconda.sh
        bash miniconda.sh -b 
        export PATH="$HOME/miniconda${PYTHON_VERSION:0:1}/bin:$PATH"
        hash -r
        conda config --set always_yes yes --set changeps1 no --set anaconda_upload no
        conda install -q conda-build anaconda-client 
        conda update  -q conda conda-build
        conda install -q python=${PYTHON_VERSION} 
        
        # build and upload openvisus
        cd "${TRAVIS_BUILD_DIR}"
        cd conda
        conda-build -q openvisus
        # test if it's working
        conda install -q --use-local openvisus
        cd $(python -m OpenVisus dirname)
        python Samples/python/Array.py
        python Samples/python/Dataflow.py
        python Samples/python/Idx.py
        
        if [[ "${DEPLOY_CONDA}" == "1" ]] ; then 
           anaconda -q -t $ANACONDA_TOKEN upload ${HOME}/miniconda${PYTHON_VERSION:0:1}/conda-bld/**/openvisus*.tar.bz2 --force
        fi
        
     else

        if [[ "${TRAVIS_TAG}" != "" || "${TRAVIS_COMMIT_MESSAGE}" == *"[deploy_pypi]"* ]]; then
           if [[ $(uname) == "Darwin" || "${DOCKER_IMAGE}" == "quay.io/pypa/manylinux1_x86_64" ]]; then
              echo "Doing deploy to pypi..."
              export DEPLOY_PYPI=1
           fi     
        fi
        
        cd "${TRAVIS_BUILD_DIR}" 
        source ./build.sh
        export WHEEL_FILENAME=$(find ${TRAVIS_BUILD_DIR}/build/install/dist -iname "*.whl")
        
        # test of it works
        if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
           cd $HOME
           python -m pip install "${WHEEL_FILENAME}" 
           python -m OpenVisus configure 
           cd $(python -m OpenVisus dirname) 
           ./visus.sh
           python Samples/python/Array.py 
           python Samples/python/Dataflow.py 
           python Samples/python/Idx.py
           
        # use Docker for the test
        elif [[ "${PYTHON_VERSION:0:3}" = "3.4" ]]; then
           echo "Skipping test"
           
        else
           cd $HOME 
           mkdir temp && cd temp
           echo "FROM ubuntu:xenial"                                                                                 > Dockerfile
           echo "COPY ${WHEEL_FILENAME} /tmp/ "                                                                     >> Dockerfile
           echo "RUN apt-get update && \\"                                                                          >> Dockerfile
           echo "   apt-get install -y software-properties-common vim && \\"                                        >> Dockerfile
           echo "   add-apt-repository ppa:deadsnakes/ppa && \\"                                                    >> Dockerfile
           echo "   apt-get update -y && \\"                                                                        >> Dockerfile
           echo "   apt-get install -y curl python${PYTHON_VERSION:0:3} python${PYTHON_VERSION:0:3}-dev  && \\"     >> Dockerfile
           echo "   curl https://bootstrap.pypa.io/get-pip.py | python${PYTHON_VERSION:0:3} && \\"                  >> Dockerfile
           echo "   python${PYTHON_VERSION:0:3} -m pip install --upgrade pip wheel  && \\"                          >> Dockerfile
           echo "   python${PYTHON_VERSION:0:3} -m pip install /tmp/*.whl && \\"                                    >> Dockerfile
           echo "   python${PYTHON_VERSION:0:3} -m OpenVisus configure && \\"                                       >> Dockerfile
           echo "   cd \$(python${PYTHON_VERSION:0:3} -m OpenVisus dirname) && \\"                                  >> Dockerfile
           echo "   ./visus.sh  && \\"                                                                              >> Dockerfile
           echo "   python${PYTHON_VERSION:0:3} Samples/python/Array.py && \\"                                      >> Dockerfile
           echo "   python${PYTHON_VERSION:0:3} Samples/python/Dataflow.py && \\"                                   >> Dockerfile
           echo "   python${PYTHON_VERSION:0:3} Samples/python/Idx.py "                                             >> Dockerfile
           sudo docker build -t test-openvisus-wheel .
        fi
        
        # deploy Pypi
        if [[ "${DEPLOY_PYPI}" == "1" ]] ; then 
           # upoad using twine
           echo [distutils]                                  > ~/.pypirc
           echo index-servers =  pypi                       >> ~/.pypirc
           echo [pypi]                                      >> ~/.pypirc
           echo username=${PYPI_USERNAME}                   >> ~/.pypirc
           echo password=${PYPI_PASSWORD}                   >> ~/.pypirc
           python -m pip --version || wget -qO- https://bootstrap.pypa.io/get-pip.py | python 
           python -m pip install --user --upgrade twine 
           python -m twine upload --skip-existing "${WHEEL_FILENAME}" 
        fi
     fi
     
     set +x  # Stop error on each command

before_deploy:
  - if [[ "$CONDA" == "1" ]]; then travis_terminate 0 ; fi
  - export SDIST_FILENAME=$(find ${TRAVIS_BUILD_DIR}/build/install/dist -iname "*.tar.gz")

deploy:
  provider: releases
  api_key:
    secure: vvs+N/XwsigYj6pZIR0Lksg+FnA2M7bCy4aHj7at1nPOtX3ZHHdkSgIyd06awkiWSNg++fM6GIi7ewU+ftX9rGxgRFG5eWIKQyuHHPvNSIIcJe1cY7440Y6Kb2p58BFeGQxLJl0y3XlCObPW7yMoY7h9i6kTL6w7k3NkdWkFpdDaNXXEaGnzeoaM6u+iBmgAWgX9Ozlu+ogjFpw5b7QPtKgi1Bey/IbIeVWExuFnXsTJe3MDobdFvgJ0tewErnWAey3V8IXQzVMqdOIAl+xtu3RMmsdNymDAZpof31wFNLCr7BMmIg/O2QW1tnvNXuFX9Gpry5CKb7i0oxthiLyNTkh2sZQcAJcBdWJlP4LiSCBoJ2HuAc5XSqss8aXt/hHAzL3ICPtd6wVPlHEMK1+/EsC4WcO5X0ngzmGnn8eceIBFJiqYhI+c85GqUWPrFw+REKUsAwthMK0tNErruWZR1uubYnlyQYHpSaPdKie6o0aWK8Xit+GN3jkcqRrhQDwX3WFLxw2N07eh/f3vCD4m7GwRJfi5LXDuoLp3Qg5w23gi4ewp71v9oTZNT4K3vVEYuwzCyglppjyszQDvBAwxgxnWtSZh2nGEtwtDL5dRiIXehqfaK7mRKQ8iZwpQkuyTD+rsl45nTuNjeKYC3BLHd+NZhJI8qmcD6oykt+oxzjg=
  file: 
    - $SDIST_FILENAME
  skip_cleanup: true
  on:
    repo: sci-visus/OpenVisus
    tags: true
    all_branches: true

