name: BuildOpenVisus

on: [push]

jobs:
        
  # ///////////////////////////////////////////////////////////////
  BuildOnWindowsJob:
  
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [ '3.6', '3.7']  
        
    steps:
    
    # ____________________________________________
    - name: Checkout
      uses: actions/checkout@v2
  
    # ____________________________________________
    - name: Checkout submodules
      uses: actions/checkout@v2
      with:
        repository: sci-visus/VisusSlam
        token: ${{ secrets.VISUS_SLAM_ACCESS_TOKEN }}
        path: Libs/Slam    
      
    # ____________________________________________
    - name: Install CMake
      uses: lukka/get-cmake@latest
      
    # ____________________________________________
    - name: Install Swig 
      uses: crazy-max/ghaction-chocolatey@v1
      with:
        args: install -y --allow-empty-checksums --no-progress cmake swig  
        
    # ____________________________________________
    - name: Install Miniconda 
      uses: goanpeca/setup-miniconda@v1
      with:
        miniconda-version: 'latest'    
        python-version: ${{ matrix.python-version }}
        
    # ____________________________________________
    - name: Install Qt 
      uses: jurplel/install-qt-action@v2
      with:
        version: '5.9.2'
        arch: 'win64_msvc2017_64'
        install-deps: 'true'  
        dir: C:\

    # ____________________________________________
    - name: Compile OpenVisus 
      shell: bash
      run: |
           conda activate                                                                1>/dev/null
           conda update -n base -c defaults conda                                        1>/dev/null
           conda config --set always_yes yes --set changeps1 no --set anaconda_upload no 1>/dev/null
           conda create -q -n tmp python=${{ matrix.python-version }} numpy              1>/dev/null
           conda activate tmp                                                            1>/dev/null
           conda install conda-build anaconda-client numpy                               1>/dev/null  
           
           set -e  # stop or error
           set -x  # very verbose   
           
           mkdir -p build 
           cd build
           cmake -G "Visual Studio 16 2019" -A "x64" -DQt5_DIR="${Qt5_Dir}/lib/cmake/Qt5" -DPython_EXECUTABLE=$(which python) -DVISUS_SLAM=1 ../
           cmake --build . --target ALL_BUILD --config Release --parallel 4 
           cmake --build . --target INSTALL   --config Release
          
           cd Release/OpenVisus
           PYTHONPATH=../ python -m OpenVisus configure
           PYTHONPATH=../ python -m OpenVisus test
           PYTHONPATH=../ python -m OpenVisus convert

           # https://anaconda.org/ViSUS/settings/access
           GIT_TAG=$(git describe --tags --exact-match 2>/dev/null || true)
           if [[ "${GIT_TAG}" != ""  ]] ; then
             rm -Rf $(find ${CONDA} -iname "openvisus*.tar.bz2")  || true
             python setup.py -q bdist_conda 1>/dev/null
             CONDA_FILENAME=$(find ${CONDA} -iname "openvisus*.tar.bz2"  | head -n 1) 
             anaconda --verbose --show-traceback  -t ${{ secrets.ANACONDA_TOKEN }}  upload "${CONDA_FILENAME}"
           fi

        
  # ///////////////////////////////////////////////////////////////
  BuildOnMacOsJob:
  
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ['3.6', '3.7']  
        
    steps:
    # ____________________________________________
    - name: Checkout
      uses: actions/checkout@v2
      
    # ____________________________________________
    - name: Checkout submodules
      uses: actions/checkout@v2
      with:
        repository: sci-visus/VisusSlam
        token: ${{ secrets.VISUS_SLAM_ACCESS_TOKEN }}
        path: Libs/Slam    
            
      
    # ____________________________________________
    - name: Install CMake
      uses: lukka/get-cmake@latest
            
    # ____________________________________________  
    - name: Install Swig
      run: brew install swig     
           
    # ____________________________________________
    - name: Install CPython 
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}     

    # ____________________________________________  
    - name: Install SDK 10.9
      run: cd /opt && git clone https://github.com/phracker/MacOSX-SDKs.git 
              
    # ____________________________________________
    - name: Install Qt 
      uses: jurplel/install-qt-action@v2
      with:
        version: '5.9.3'
        target: 'desktop'
        install-deps: 'true'  
        dir: /opt

    # ____________________________________________
    - name: Install Miniconda 
      uses: goanpeca/setup-miniconda@v1
      with:
        miniconda-version: 'latest'    
        python-version: ${{ matrix.python-version }}
        
    # ____________________________________________
    - name: Compile OpenVisus 
      shell: bash
      run: | 
           conda activate                                                                1>/dev/null
           conda update -n base -c defaults conda                                        1>/dev/null
           conda config --set always_yes yes --set changeps1 no --set anaconda_upload no 1>/dev/null
           conda create -q -n tmp python=${{ matrix.python-version }} numpy              1>/dev/null
           conda activate tmp                                                            1>/dev/null
           conda install conda-build anaconda-client numpy                               1>/dev/null  
           
           set -e  # stop or error
           set -x  # very verbose   
           
           mkdir -p build 
           cd build
           cmake -G "Visual Studio 16 2019" -A "x64" -DQt5_DIR="${Qt5_Dir}/lib/cmake/Qt5" -DPython_EXECUTABLE=$(which python) -DVISUS_SLAM=1 ../
           cmake --build . --target ALL_BUILD --config Release --parallel 4 
           cmake --build . --target INSTALL   --config Release
          
           cd Release/OpenVisus
           PYTHONPATH=../ python -m OpenVisus configure  
           PYTHONPATH=../ python -m OpenVisus test
           PYTHONPATH=../ python -m OpenVisus convert

           # https://anaconda.org/ViSUS/settings/access
           GIT_TAG=$(git describe --tags --exact-match 2>/dev/null || true)
           if [[ "${GIT_TAG}" != ""  ]] ; then
             rm -Rf $(find ${CONDA} -iname "openvisus*.tar.bz2")  || true
             python setup.py -q bdist_conda 1>/dev/null
             CONDA_FILENAME=$(find ${CONDA} -iname "openvisus*.tar.bz2"  | head -n 1) 
             anaconda --verbose --show-traceback  -t ${{ secrets.ANACONDA_TOKEN }}  upload "${CONDA_FILENAME}"
           fi
  

  # ///////////////////////////////////////////////////////////////
  BuildOnUbuntuJob:
  
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.6', '3.7']  
        
    steps:
    # ____________________________________________
    - name: Checkout
      uses: actions/checkout@v2
      
    # ____________________________________________
    - name: Checkout submodules
      uses: actions/checkout@v2
      with:
        repository: sci-visus/VisusSlam
        token: ${{ secrets.VISUS_SLAM_ACCESS_TOKEN }}
        path: Libs/Slam    
          
    # ____________________________________________
    - name: Install Miniconda 
      uses: goanpeca/setup-miniconda@v1
      with:
        miniconda-version: 'latest'    
        python-version: ${{ matrix.python-version }}
                    
      
    # ____________________________________________
    - name: Compile OpenVisus 
      shell: bash
      run: |
           conda activate                                                                1>/dev/null
           conda update -n base -c defaults conda                                        1>/dev/null
           conda config --set always_yes yes --set changeps1 no --set anaconda_upload no 1>/dev/null
           conda create -q -n tmp python=${{ matrix.python-version }} numpy              1>/dev/null
           conda activate tmp                                                            1>/dev/null
           conda install conda-build anaconda-client numpy                               1>/dev/null  
           
           set -e  # stop or error
           set -x  # very verbose 
     
           docker run -it \
              -e PYTHON_VERSION=${{ matrix.python-version }} \
              -e VISUS_SLAM=1 \
              -e Qt5_DIR=/opt/qt59 \
              -v $(pwd):/root/OpenVisus \
              -w /root/OpenVisus \
              visus/portable-linux-binaries \
              /bin/bash -c "./scripts/build_linux.sh"
           sudo chown -R root:root  ./build
           sudo chmod -R a+rwx      ./build
           
           cd build/Release/OpenVisus
           PYTHONPATH=../ python -m OpenVisus configure  
           PYTHONPATH=../ python -m OpenVisus test
           PYTHONPATH=../ python -m OpenVisus convert

           # https://anaconda.org/ViSUS/settings/access
           GIT_TAG=$(git describe --tags --exact-match 2>/dev/null || true)
           if [[ "${GIT_TAG}" != ""  ]] ; then
             rm -Rf $(find ${CONDA} -iname "openvisus*.tar.bz2")  || true
             python setup.py -q bdist_conda 1>/dev/null
             CONDA_FILENAME=$(find ${CONDA} -iname "openvisus*.tar.bz2"  | head -n 1) 
             anaconda --verbose --show-traceback  -t ${{ secrets.ANACONDA_TOKEN }}  upload "${CONDA_FILENAME}"
           fi
