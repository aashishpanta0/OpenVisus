name: BuildOpenVIsus

on: [push]

jobs:
        
  # ///////////////////////////////////////////////////////////////
  BuildOnWindows:
    runs-on: windows-latest
    strategy:
      max-parallel: 6
      matrix:
        python-version: [ '3.6']  
    steps:
    # ____________________________________________
    - name: Checkout
      uses: actions/checkout@v2
      
    # ____________________________________________      
    - name: CacheChocolatey
      uses: actions/cache@v1
      with:
        path: c:\ProgramData\Chocolate
        key: CacheChocolatey1
                  
    # ____________________________________________
    - name: InstallCMakeAndSwig
      uses: crazy-max/ghaction-chocolatey@v1
      with:
        args: install -y --allow-empty-checksums --no-progress cmake swig  

    # ____________________________________________        
    - name: CacheQt
      id: CacheQtStepId
      uses: actions/cache@v1
      with:
        path: C:\Qt
        key: QtCache1

    # ____________________________________________
    - name: InstallQt
      uses: jurplel/install-qt-action@v2
      with:
        version: '5.9.2'
        host: 'windows'
        target: 'desktop'
        arch: 'win64_msvc2017_64'
        install-deps: 'true'  
        dir: C:\
        cached: ${{ steps.CacheQtStepId.outputs.cache-hit }} # if it was cached or not (true | false)
             
    # ____________________________________________
    - name: SetupCPython
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }} 
        architecture: 'x64'
  
    # ____________________________________________
    - name: CompileOpenVisus
      shell: bash
      run: |
           set -e  # stop or error
           set -x  # very verbose  
           
           PYTHON_VERSION=${{ matrix.python-version }}
           Python_EXECUTABLE=${pythonLocation}/python.exe
           Qt5_DIR="${Qt5_Dir}/lib/cmake/Qt5"
           
           echo PYTHON_VERSION    ${PYTHON_VERSION}
           echo Python_EXECUTABLE ${Python_EXECUTABLE}
           echo Qt5_DIR           ${Qt5_DIR}
           echo cmake             $(which cmake)
           echo swig              $(which swig)
         
           python -m pip install numpy setuptools wheel twine --upgrade 1>/dev/null 

           mkdir -p build
           cd build
           cmake -G "Visual Studio 16 2019" -A "x64" -DQt5_DIR=${Qt5_DIR} -DPython_EXECUTABLE=${Python_EXECUTABLE} ../
           cmake --build . --target ALL_BUILD --config Release
           cmake --build . --target INSTALL   --config Release

           cd Release/OpenVisus
           PYTHONPATH=../ python -m OpenVisus test
           PYTHONPATH=../ python -m OpenVisus convert

           python setup.py -q bdist_wheel --python-tag=cp${PYTHON_VERSION:0:1}${PYTHON_VERSION:2:1} --plat-name=win_amd64

           GIT_TAG=$(git describe --tags --exact-match 2>/dev/null || true)
           if [[ "${GIT_TAG}" != "" && "${PYPI_USERNAME}" != "" && "${PYPI_PASSWORD}" != "" ]] ; then
              python -m twine upload --username ${PYPI_USERNAME} --password ${PYPI_PASSWORD} --skip-existing  "dist/*.whl" 
           fi
    # ____________________________________________
    - name: InstallMiniconda 
      uses: goanpeca/setup-miniconda@v1
      with:
        miniconda-version: 'latest'    
        python-version: ${{ matrix.python-version }}
        
    # ____________________________________________
    - name: BuildOpenVisusForConda
      if: ${{ '${{ matrix.python-version }}' != '3.8' }}
      shell: bash -l {0}
      run: | 
           conda activate
           conda config --set always_yes yes --set changeps1 no --set anaconda_upload no
           conda update -q conda
           conda create -q -n tmp python=${{ matrix.python-version }} numpy
           conda activate tmp
           conda install conda-build       
           conda config --set always_yes yes --set changeps1 no --set anaconda_upload no 
           conda install conda-build anaconda-client numpy     

           pwd
           PYTHONPATH=../ python -m OpenVisus configure
           PYTHONPATH=../ python -m OpenVisus test
           PYTHONPATH=../ python -m OpenVisus convert
         
           rm -Rf $(find ~/Miniconda3 -iname "openvisus*.tar.bz2")   
           python setup.py -q bdist_conda 
           CONDA_FILENAME=$(find ~/Miniconda3 -iname "openvisus*.tar.bz2"  | head -n 1)
           
           GIT_TAG=$(git describe --tags --exact-match 2>/dev/null || true)
           if [[ "${GIT_TAG}" != "" && "${ANACONDA_TOKEN}" != "" ]] ; then
              anaconda -t "${ANACONDA_TOKEN}" upload "${CONDA_FILENAME}"
           fi


  # ///////////////////////////////////////////////////////////////
  BuildOnMacOs:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [ '3.6' ]      
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: CompileOpenVisus
      run: |      
           export PYTHON_VERSION=${{ matrix.python-version }}
           export  GIT_TAG=$(git describe --tags --exact-match 2>/dev/null || true)
           scripts/build_osx.h
           if [[ "${PYTHON_VERSION}" != "3.8" ]] ; then 
             scripts/build_conda.h 
           fi

  # ///////////////////////////////////////////////////////////////
  BuildOnLinux:
  
    runs-on: ubuntu-latest 
    container: visus/travis-image # using a docker image for portable binaries
    strategy:
      matrix:
        python-version: [ '3.6' ]       
    steps:
    
    # ____________________________________________    
    - name: Checkout
      uses: actions/checkout@v2

    # ____________________________________________
    - name: CompileOpenVisus
      run: |
           
           export PYTHON_VERSION=${{ matrix.python-version }}
           export  GIT_TAG=$(git describe --tags --exact-match 2>/dev/null || true)
           scripts/build_linux.h
           if [[ "${PYTHON_VERSION}" != "3.8" ]] ; then 
             scripts/build_conda.h 
           fi