name: BuildOpenVisus

on: [push]

jobs:
        
  # ///////////////////////////////////////////////////////////////
  BuildOnWindowsJob:
  
    runs-on: windows-latest
    strategy:
      # max-parallel: 6
      matrix:
        python-version: [ '3.6']  
        
    steps:
    
    # ____________________________________________
    - name: Checkout
      uses: actions/checkout@v2
      
    # ____________________________________________
    - name: Install CMake
      uses: lukka/get-cmake@latest
      
    # ____________________________________________
    - name: Install Swig 
      uses: crazy-max/ghaction-chocolatey@v1
      with:
        args: install -y --allow-empty-checksums --no-progress cmake swig  
        
    # ____________________________________________
    - name: Install CPython 
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }} 
        architecture: 'x64'        
        
    # ____________________________________________
    - name: Install Qt 
      uses: jurplel/install-qt-action@v2
      with:
        version: '5.9.2'
        arch: 'win64_msvc2017_64'
        install-deps: 'true'  
        dir: C:\

    # ____________________________________________
    - name: Compile OpenVisus 
      shell: bash
      env: 
        PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
        PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
           set -e  # stop or error
           set -x  # very verbose  

           PYTHON_VERSION=${{ matrix.python-version }}
           PLATFORM_NAME=win_amd64
           PLATFORM_TAG=cp${PYTHON_VERSION:0:1}${PYTHON_VERSION:2:1}      
           Python_EXECUTABLE=${pythonLocation}/python.exe
           Qt5_DIR="${Qt5_Dir}/lib/cmake/Qt5
           
           ${Python_EXECUTABLE} -m pip install numpy setuptools wheel twine --upgrade 1>/dev/null 
           
           mkdir -p build
           cd build    
           
           cmake -G "Visual Studio 16 2019" -A "x64" -DQt5_DIR="${Qt5_DIR}" -DPython_EXECUTABLE=${Python_EXECUTABLE} ../
           cmake --build . --target ALL_BUILD --config Release --parallel 4 
           cmake --build . --target INSTALL   --config Release
          
           cd Release/OpenVisus
           PYTHONPATH=../ ${Python_EXECUTABLE} -m OpenVisus test
           PYTHONPATH=../ ${Python_EXECUTABLE} -m OpenVisus convert    
                 
           GIT_TAG=$(git describe --tags --exact-match 2>/dev/null || true)
           if [[ "${GIT_TAG}" != "" && "${PYPI_USERNAME}" != "" && "${PYPI_PASSWORD}" != "" ]] ; then
     
              ${Python_EXECUTABLE} setup.py -q bdist_wheel --python-tag=${PLATFORM_TAG} --plat-name=${PLATFORM_NAME}
              ${Python_EXECUTABLE} -m twine upload --username ${PYPI_USERNAME} --password ${PYPI_PASSWORD} --skip-existing  "dist/*.whl" 
           fi               
      
    # ____________________________________________
    - name: Install Miniconda 
      uses: goanpeca/setup-miniconda@v1
      with:
        miniconda-version: 'latest'    
        python-version: ${{ matrix.python-version }}
        
    # ____________________________________________
    - name: Build OpenVisus conda package
      if: matrix.python-version != '3.8' 
      env: 
         ANACONDA_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
      shell: bash -l {0}
      run: | 
           set -e  # stop or error
           # set -x  # very verbose   
                 
           conda activate 1>/dev/null
           conda config --set always_yes yes --set changeps1 no --set anaconda_upload no 1>/dev/null
           conda create -q -n tmp python=${{ matrix.python-version }} numpy 1>/dev/null
           conda activate tmp 1>/dev/null
           conda install conda-build anaconda-client numpy 1>/dev/null   
           
           which python 

           cd build/Release/OpenVisus
           PYTHONPATH=../ python -m OpenVisus configure 1>/dev/null
           
           PYTHONPATH=../ python -m OpenVisus test
           PYTHONPATH=../ python -m OpenVisus convert
         
           # https://anaconda.org/ViSUS/settings/access
           GIT_TAG=$(git describe --tags --exact-match 2>/dev/null || true)
           if [[ "${GIT_TAG}" != "" && "${ANACONDA_TOKEN}" != "" ]] ; then
              rm -Rf $(find ~/Miniconda3 -iname "openvisus*.tar.bz2")   
              python setup.py -q bdist_conda 1>/dev/null
              CONDA_FILENAME=$(find ~/Miniconda3 -iname "openvisus*.tar.bz2"  | head -n 1)  
              anaconda -t "${ANACONDA_TOKEN}" upload "${CONDA_FILENAME}"
           fi

        
  # ///////////////////////////////////////////////////////////////
  BuildOnMacOsJob:
  
    runs-on: macos-latest
    strategy:
      # max-parallel: 6
      matrix:
        python-version: [ '3.6']  
        
    steps:
    # ____________________________________________
    - name: Checkout
      uses: actions/checkout@v2
      
    # ____________________________________________
    - name: Install CMake
      uses: lukka/get-cmake@latest
            
    # ____________________________________________  
    - name: Install Swig
      run: brew install swig     
           
    # ____________________________________________
    - name: Install CPython 
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}     

    # ____________________________________________  
    - name: Install 10.9 SDK 
      run: cd /opt && git clone https://github.com/phracker/MacOSX-SDKs.git 
              
    # ____________________________________________
    - name: Install Qt 
      uses: jurplel/install-qt-action@v2
      with:
        version: '5.9.3'
        target: 'desktop'
        install-deps: 'true'  
        dir: /opt

    # ____________________________________________
    - name: Compile OpenVisus 
      shell: bash
      env: 
         PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
         PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |   
           set -e  # stop or error
           set -x  # very verbose  
           
           PYTHON_VERSION=${{ matrix.python-version }}  
           PLATFORM_NAME=macosx_10_9_x86_64
           PLATFORM_TAG=cp${PYTHON_VERSION:0:1}${PYTHON_VERSION:2:1} 
           Python_EXECUTABLE=${pythonLocation}/python    
           Qt5_DIR=${Qt5_Dir}/lib/cmake/Qt5
           CMAKE_OSX_SYSROOT=/opt/MacOSX-SDKs/MacOSX10.9.sdk
           
           ${Python_EXECUTABLE} -m pip install numpy setuptools wheel twine --upgrade 1>/dev/null 
           mkdir -p build
           cd build   
           
           cmake -GXcode -DPython_EXECUTABLE=${Python_EXECUTABLE} -DQt5_DIR=${Qt5_DIR} -DCMAKE_OSX_SYSROOT=${CMAKE_OSX_SYSROOT} ../
           cmake --build ./ --target ALL_BUILD --config Release --parallel 4 
           cmake --build ./ --target install   --config Release
              
           cd Release/OpenVisus
           PYTHONPATH=../ ${Python_EXECUTABLE} -m OpenVisus test
           PYTHONPATH=../ ${Python_EXECUTABLE} -m OpenVisus convert  
              
           GIT_TAG=$(git describe --tags --exact-match 2>/dev/null || true)
           if [[ "${GIT_TAG}" != "" && "${PYPI_USERNAME}" != "" && "${PYPI_PASSWORD}" != "" ]] ; then
              ${Python_EXECUTABLE} setup.py -q bdist_wheel --python-tag=${PLATFORM_TAG} --plat-name=${PLATFORM_NAME}         
              ${Python_EXECUTABLE} -m twine upload --username ${PYPI_USERNAME} --password ${PYPI_PASSWORD} --skip-existing  "dist/*.whl" 
           fi   
  
    # ____________________________________________
    - name: Install Miniconda 
      uses: goanpeca/setup-miniconda@v1
      with:
        miniconda-version: 'latest'    
        python-version: ${{ matrix.python-version }}
        
    # ____________________________________________
    - name: Build OpenVisus conda package
      if: matrix.python-version != '3.8' 
      env: 
        ANACONDA_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
      shell: bash -l {0}
      run: | 
           set -e  # stop or error
           # set -x  # very verbose   
                 
           conda activate 1>/dev/null
           conda config --set always_yes yes --set changeps1 no --set anaconda_upload no 1>/dev/null
           conda create -q -n tmp python=${{ matrix.python-version }}   numpy 1>/dev/null
           conda activate tmp    1>/dev/null
           conda install conda-build anaconda-client numpy 1>/dev/null

           cd build/Release/OpenVisus
           PYTHONPATH=../ python -m OpenVisus configure 1>/dev/null
           
           PYTHONPATH=../ python -m OpenVisus test
           PYTHONPATH=../ python -m OpenVisus convert
         
           # https://anaconda.org/ViSUS/settings/access
           GIT_TAG=$(git describe --tags --exact-match 2>/dev/null || true)
           if [[ "${GIT_TAG}" != "" && "${ANACONDA_TOKEN}" != "" ]] ; then
              rm -Rf $(find ~/Miniconda3 -iname "openvisus*.tar.bz2")   
              python setup.py -q bdist_conda 1>/dev/null
              CONDA_FILENAME=$(find ~/Miniconda3 -iname "openvisus*.tar.bz2"  | head -n 1)  
              anaconda -t "${ANACONDA_TOKEN}" upload "${CONDA_FILENAME}"
           fi

       
  # ///////////////////////////////////////////////////////////////
  BuildOnUbuntuJob:
  
    runs-on: ubuntu-latest
    strategy:
      # max-parallel: 6
      matrix:
        python-version: [ '3.6']  
        
    steps:
    # ____________________________________________
    - name: Checkout
      uses: actions/checkout@v2
      
    # ____________________________________________
    - name: Compile OpenVisus 
      shell: bash
      env: 
         PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
         PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
           PYTHON_VERSION=${{ matrix.python-version }}
           docker run -d -it --name mydocker -v $(pwd):/root/OpenVisus -w /root/OpenVisus -e PYTHON_VERSION=${PYTHON_VERSION} -e PYPI_USERNAME -e PYPI_PASSWORD visus/travis-image /bin/bash 
           docker exec mydocker /bin/bash -c "./scripts/build_linux.sh"
           chown -R $USER ./build
           chmod -R a+rwx ./build

    # ____________________________________________
    - name: Install Miniconda 
      uses: goanpeca/setup-miniconda@v1
      with:
        miniconda-version: 'latest'    
        python-version: ${{ matrix.python-version }}
        
    # ____________________________________________
    - name: Build OpenVisus conda package
      if: matrix.python-version != '3.8' 
      env: 
         ANACONDA_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
      shell: bash -l {0}
      run: | 
           set -e  # stop or error
           # set -x  # very verbose   
                 
           conda activate 1>/dev/null
           conda config --set always_yes yes --set changeps1 no --set anaconda_upload no 1>/dev/null
           conda create -q -n tmp python=${{ matrix.python-version }} numpy 1>/dev/null
           conda activate tmp 1>/dev/null
           conda install conda-build anaconda-client numpy 1>/dev/null

           cd build/Release/OpenVisus
           
           # I get some random crashes in Linux, so I'm using more actions than a simple configure here..
           conda uninstall pyqt 1>/dev/null || true
           PYTHONPATH=../ python -m OpenVisus remove-qt5 1>/dev/null
           PYTHONPATH=../ python -m OpenVisus install-pyqt5 1>/dev/null
           PYTHONPATH=../ python -m OpenVisus link-pyqt5 1>/dev/null || true # this crashes on linux (after the sys.exit(0), so I should be fine)
           PYTHONPATH=../ python -m OpenVisus generate-scripts pyqt5 1>/dev/null
           
           PYTHONPATH=../ python -m OpenVisus test
           PYTHONPATH=../ python -m OpenVisus convert      
         
           # https://anaconda.org/ViSUS/settings/access
           GIT_TAG=$(git describe --tags --exact-match 2>/dev/null || true)
           if [[ "${GIT_TAG}" != "" && "${ANACONDA_TOKEN}" != "" ]] ; then
              rm -Rf $(find ~/Miniconda3 -iname "openvisus*.tar.bz2")   
              python setup.py -q bdist_conda 1>/dev/null
              CONDA_FILENAME=$(find ~/Miniconda3 -iname "openvisus*.tar.bz2"  | head -n 1)  
              anaconda -t "${ANACONDA_TOKEN}" upload "${CONDA_FILENAME}"
           fi

