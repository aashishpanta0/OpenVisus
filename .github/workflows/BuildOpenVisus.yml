name: BuildOpenVIsus

on: [push]

jobs:
        
  # ///////////////////////////////////////////////////////////////
  BuildOnWindows:
    runs-on: windows-latest
    strategy:
      max-parallel: 6
      matrix:
        python-version: [ '3.6']  
    steps:
    # ____________________________________________
    - name: Checkout
      uses: actions/checkout@v2
      
    # ____________________________________________      
    - name: CacheChocolatey
      uses: actions/cache@v1
      with:
        path: c:\ProgramData\Chocolate
        key: CacheChocolatey1
                  
    # ____________________________________________
    - name: InstallCMakeAndSwig
      uses: crazy-max/ghaction-chocolatey@v1
      with:
        args: install -y --allow-empty-checksums --no-progress cmake swig  

    # ____________________________________________        
    - name: CacheQt
      id: CacheQtStepId
      uses: actions/cache@v1
      with:
        path: C:\Qt
        key: QtCache1

    # ____________________________________________
    - name: InstallQt
      uses: jurplel/install-qt-action@v2
      with:
        version: '5.9.2'
        host: 'windows'
        target: 'desktop'
        arch: 'win64_msvc2017_64'
        install-deps: 'true'  
        dir: C:\
        cached: ${{ steps.CacheQtStepId.outputs.cache-hit }} # if it was cached or not (true | false)
             
    # ____________________________________________
    - name: SetupCPython
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }} 
        architecture: 'x64'
  
    # ____________________________________________  
    - name: set environment variables
      uses: allenevans/set-env@v1.0.0
      with:
        PYTHON_VERSION: ${{ matrix.python-version }}   
  
    # ____________________________________________
    - name: CompileOpenVisus
      shell: bash
      run: |
           set -e  # stop or error
           set -x  # very verbose  
           
           Python_EXECUTABLE=${pythonLocation}/python.exe
           Qt5_DIR="${Qt5_Dir}/lib/cmake/Qt5"
           
           echo PYTHON_VERSION    ${PYTHON_VERSION}
           echo Python_EXECUTABLE ${Python_EXECUTABLE}
           echo Qt5_DIR           ${Qt5_DIR}
           echo cmake             $(which cmake)
           echo swig              $(which swig)
         
           python -m pip install numpy setuptools wheel twine --upgrade 1>/dev/null 

           mkdir -p build
           cd build
           cmake -G "Visual Studio 16 2019" -A "x64" -DQt5_DIR=${Qt5_DIR} -DPython_EXECUTABLE=${Python_EXECUTABLE} ../
           cmake --build . --target ALL_BUILD --config Release
           cmake --build . --target INSTALL   --config Release

           cd Release/OpenVisus
           PYTHONPATH=../ python -m OpenVisus test
           PYTHONPATH=../ python -m OpenVisus convert

           python setup.py -q bdist_wheel --python-tag=cp${PYTHON_VERSION:0:1}${PYTHON_VERSION:2:1} --plat-name=win_amd64

           GIT_TAG=$(git describe --tags --exact-match 2>/dev/null || true)
           if [[ "${GIT_TAG}" != "" && "${PYPI_USERNAME}" != "" && "${PYPI_PASSWORD}" != "" ]] ; then
              python -m twine upload --username ${PYPI_USERNAME} --password ${PYPI_PASSWORD} --skip-existing  "dist/*.whl" 
           fi
    # ____________________________________________
    - name: InstallMiniconda 
      uses: goanpeca/setup-miniconda@v1
      with:
        miniconda-version: 'latest'    
        python-version: ${{ matrix.python-version }}
        
    # ____________________________________________
    - name: BuildOpenVisusForConda
      if: ${{ '${{ matrix.python-version }}' != '3.8' }}
      shell: bash -l {0}
      run: | 
           conda activate
           conda config --set always_yes yes --set changeps1 no --set anaconda_upload no
           conda create -q -n tmp python=${PYTHON_VERSION} numpy
           conda activate tmp   
           conda install conda-build anaconda-client numpy     

           cd build/Release/OpenVisus
           PYTHONPATH=../ python -m OpenVisus configure
           PYTHONPATH=../ python -m OpenVisus test
           PYTHONPATH=../ python -m OpenVisus convert
         
           rm -Rf $(find ~/Miniconda3 -iname "openvisus*.tar.bz2")   
           python setup.py -q bdist_conda 
           CONDA_FILENAME=$(find ~/Miniconda3 -iname "openvisus*.tar.bz2"  | head -n 1)
           
           GIT_TAG=$(git describe --tags --exact-match 2>/dev/null || true)
           if [[ "${GIT_TAG}" != "" && "${ANACONDA_TOKEN}" != "" ]] ; then
              anaconda -t "${ANACONDA_TOKEN}" upload "${CONDA_FILENAME}"
           fi


  # ///////////////////////////////////////////////////////////////
  BuildOnMacOs:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [ '3.6' ]      
    steps:
    - name: Checkout
      uses: actions/checkout@v2
     
    # ____________________________________________  
    - name: set environment variables
      uses: allenevans/set-env@v1.0.0
      with:
        PYTHON_VERSION: ${{ matrix.python-version }}         
      
    # ____________________________________________  
    - name: InstallOSXPrerequisites
      run: |      
           brew update         1>/dev/null 2>/dev/null || true
           brew install cmake  1>/dev/null 2>/dev/null || true
           brew install swig   1>/dev/null 2>/dev/null || true

           if (( 1 == 1 )) ; then
           	brew install sashkab/python/python@${PYTHON_VERSION} 
           	python${PYTHON_VERSION} -m pip install -q --upgrade pip                		|| true
           	python${PYTHON_VERSION} -m pip install -q numpy setuptools wheel twine --upgrade   || true
           fi

           # install qt 5.9.3 in order to be compatible with conda PyQt5 (very old so I need to do some tricks)
           # NOTE important to keep both the link and real path
           if (( 1 == 1 )) ; then
           	pushd $(brew --prefix)/Homebrew/Library/Taps/homebrew/homebrew-core 
           	git fetch --unshallow || true
           	git checkout 13d52537d1e0e5f913de46390123436d220035f6 -- Formula/qt.rb 
           	cat Formula/qt.rb \
           		| sed -e 's|depends_on :mysql|depends_on "mysql-client"|g' \
           		| sed -e 's|depends_on :postgresql|depends_on "postgresql"|g' \
           		| sed -e 's|depends_on :macos => :mountain_lion|depends_on :macos => :sierra|g' \
           		> /tmp/qt.rb
           	cp /tmp/qt.rb Formula/qt.rb 
           	brew install --force qt 
           	brew link --force qt	
           	git checkout -f
           	popd	
           fi
           
           # install osx 10.9 for portable binaries
           if (( 1 == 1 )) ; then
           	pushd ~
           	git clone https://github.com/phracker/MacOSX-SDKs.git 
           	popd
           fi     
      
    # ____________________________________________  
    - name: set environment variables
      uses: allenevans/set-env@v1.0.0
      with:
        CMAKE_OSX_SYSROOT: ~/MacOSX-SDKs/MacOSX10.9.sdk   
        Qt5_DIR: /usr/local/opt/qt   
        Python_EXECUTABLE: /usr/local/opt/python@${{ matrix.python-version }}/bin/python${{ matrix.python-version }}
            
    # ____________________________________________  
    - name: CompileOpenVisus
      run: |      
           ./scripts/build_osx.h

    # ____________________________________________
    - name: InstallMiniconda 
      uses: goanpeca/setup-miniconda@v1
      with:
        miniconda-version: 'latest'    
        python-version: ${{ matrix.python-version }}           
           
    # ____________________________________________
    - name: BuildOpenVisusForConda
      if: ${{ '${{ matrix.python-version }}' != '3.8' }}
      shell: bash -l {0}
      run: |      
           cd build/Release/OpenVisus
           bash ./scripts/build_conda.h

  # ///////////////////////////////////////////////////////////////
  BuildOnLinux:
  
    runs-on: ubuntu-latest 
    container: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.6' ]       
    steps:
    
    # ____________________________________________    
    - name: Checkout
      uses: actions/checkout@v2

    # ____________________________________________  
    - name: set environment variables
      uses: allenevans/set-env@v1.0.0
      with:
        PYTHON_VERSION: ${{ matrix.python-version }} 
        Python_EXECUTABLE: python${{ matrix.python-version }} 
        Qt5_DIR: /opt/qt59

    # ____________________________________________
    - name: CompileOpenVisus
      run: |
           docker run -d -it --name mydocker -v $(pwd):/root/OpenVisus -w /root/OpenVisus -e PYTHON_VERSION -e Python_EXECUTABLE -e Qt5_DIR -e ANACONDA_TOKEN visus/travis-image /bin/bash 
           docker exec mydocker /bin/bash -c "./scripts/build_linux.sh"
 
    # ____________________________________________
    - name: InstallMiniconda 
      uses: goanpeca/setup-miniconda@v1
      with:
        miniconda-version: 'latest'    
        python-version: ${{ matrix.python-version }}     
     
    # ____________________________________________
    - name: BuildOpenVisusForConda
      if: ${{ '${{ matrix.python-version }}' != '3.8' }}
      shell: bash -l {0}
      run: |      
           docker exec mydocker /bin/bash -c "cd build/Release/OpenVisus && bash ./scripts/build_conda.sh"      