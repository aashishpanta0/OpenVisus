name: Build.OpenVisusNoGui

on: [push]

jobs:

  # ///////////////////////////////////////////////////////////////
  Build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false  
      matrix:
        python-version: [ '3.6', '3.7', '3.8', '3.9'] 
        os: ["ubuntu-latest"]
     
    steps:
    
    # ____________________________________________ CLONE OPENVISUS
    - name: git clone OpenVisus
      uses: actions/checkout@v2

    # ____________________________________________ INSTALL CPYTHON 
    - name: Install CPython 
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }} 
        architecture: 'x64'

    # ____________________________________________ COMPILE OPENVISUS
    - name: Compile OpenVisusNoGui
      if: matrix.os == 'ubuntu-latest'
      shell: bash -l {0}
      run: |
           # i can use the pyqt one, but I would need to share the directory to docker, for simplicity I'm not doing it
           docker run -e PYTHON_VERSION=${{ matrix.python-version }} -e VISUS_GUI=0 -e VISUS_MODVISUS=1 -e VISUS_SLAM=0 -v ${PWD}:${PWD}  -w ${PWD} visus/portable-linux-binaries /bin/bash -c "./scripts/build_linux.sh"
           sudo chown -R root:root  build
           sudo chmod -R a+rwx      build

    # ____________________________________________ TEST
    - name: Test OpenVisusNoGui 
      shell: bash -l {0}
      run: |
           set -x
           which python
           cd build/Release/OpenVisus
           export PYTHONPATH=../
           ${pythonLocation}/python  -m OpenVisus configure  || true  # segmentation fault problem on linux
           ${pythonLocation}/python  -m OpenVisus test 

    # ____________________________________________ DISTRIB OpenVisusNoGui PyPi
    - name: Distrib OpenVisusNoGui
      shell: bash -l {0}
      run: |
           set -x
           GIT_TAG=$(git describe --tags --exact-match 2>/dev/null || true)
           if [[ "${GIT_TAG}" != "" ]] ; then
             echo "GIT_TAG=$GIT_TAG"
             
             # install some needed packages
             ${pythonLocation}/python -m pip install setuptools wheel twine --upgrade 1>/dev/null || true
             cd build/Release/OpenVisus
           
             # running setup to create the wheel
             Version=${{ matrix.python-version }}
             ${pythonLocation}/python setup.py -q bdist_wheel --python-tag=cp${Version:0:1}${Version:2:1} --plat-name=manylinux2010_x86_64           
           
             ${pythonLocation}/python -m twine upload --username ${{ secrets.PYPI_USERNAME }} --password ${{ secrets.PYPI_PASSWORD }} --skip-existing  "dist/*.whl" 
           fi
    # to REENABLE!
    # ____________________________________________ DISTRIB Docker
    #- name: Distrib mod_visus Docker
    #  if: ${{ matrix.python-version=='3.8' }}
    #  shell: bash -l {0}
    #  run: |
    #       set -x           
    #       GIT_TAG=$(git describe --tags --exact-match 2>/dev/null || true)
    #       if [[ "${GIT_TAG}" != "" ]] ; then
    #         TAG=`${pythonLocation}/python Libs/swig/setup.py print-tag`
    #         echo "TAG=${TAG}" 
    #         cd Docker/mod_visus/httpd
    #         echo ${{ secrets.DOCKER_TOKEN }} | docker login -u=${{ secrets.DOCKER_USERNAME }} --password-stdin
    #         docker build --tag visus/mod_visus:$TAG  --build-arg TAG=$TAG .           
    #       
    #         echo "Uploading  visus/mod_visus:$TAG to Docker"
    #         docker push visus/mod_visus:$TAG
    #       fi