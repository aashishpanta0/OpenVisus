version: '1.0.{build}'


notifications:
  - provider: Email
    to:
      - scrgiorgio@gmail.com
    on_build_success: true
    on_build_failure: true
    on_build_status_changed: true  
  
environment:

  QT5_DIR: C:/Qt/5.10.1/msvc2017_64/lib/cmake/Qt5
  PYPI_USERNAME: scrgiorgio
  PYPI_PASSWORD:
    secure: 6DHH80JPNRCtIYxWc/h88Q==    
  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      CMAKE_GENERATOR: Visual Studio 15 2017 Win64
      PYTHON_VERSION: 2.7
      PYTHON_DIR: "C:\\Python27-x64"
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      CMAKE_GENERATOR: Visual Studio 15 2017 Win64
      PYTHON_VERSION: 3.6
      PYTHON_DIR: "C:\\Python36-x64"          
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      CMAKE_GENERATOR: Visual Studio 15 2017 Win64
      PYTHON_VERSION: 3.7
      PYTHON_DIR: "C:\\Python37-x64" 
      SKIP_NOTAG: true
  
# 
#if you need to debug uncomment these lines (see https://www.appveyor.com/docs/how-to/rdp-to-build-worker/)
#init:
#  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
#
#on_finish:
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))


# use SKIP_NOTAG to skip building if tag is not present
init:
  - ps: | 
      If (($env:SKIP_NOTAG -eq "true") -and ($env:APPVEYOR_REPO_TAG -ne "true")) {
          Write-Host "Skipping build, not at a tag."
          Exit-AppveyorBuild
      }

install:
  - choco install -y --allow-empty-checksums swig 

build_script:
  - cd %APPVEYOR_BUILD_FOLDER%
  - mkdir build 
  - cd build 
  - set PATH=%PYTHON_DIR%;%PYTHON_DIR%\Scripts;%PATH%
  - python -m pip install numpy setuptools wheel twine
  - cmake -G "%CMAKE_GENERATOR%" -DQt5_DIR="%QT5_DIR%" -DPYTHON_VERSION=%PYTHON_VERSION% -DPYTHON_EXECUTABLE=%PYTHON_DIR%/python.exe -DPYTHON_INCLUDE_DIR=%PYTHON_DIR%/include ../
  - cmake --build . --target ALL_BUILD   --config RelWithDebInfo
  - cmake --build . --target RUN_TESTS   --config RelWithDebInfo
  - ps: >-
      If ($env:APPVEYOR_REPO_TAG -eq "true") { 
         Invoke-Expression "cmake --build . --target INSTALL --config RelWithDebInfo" 
         Invoke-Expression "cd install"
         Invoke-Expression "python setup.py -q sdist bdist_wheel --python-tag=cp%PYTHON_VERSION:~0,1%%PYTHON_VERSION:~2,1% --plat-name=win_amd64"
         Invoke-Expression "cd .."
      } 
   
# test are already in cmake
test: off

artifacts:
    - path: .\build\install\dist\*.*
      name: UploadToGitReleases
 
deploy:
  - provider: GitHub
    auth_token:
      secure: nwK8bGTRUynj+58b7E8Rgur5/0YvfIivBflFb5AaUrpC5BSTpcLbA4Ac+cCF6L4/
    artifact: UploadToGitReleases
    on:
      appveyor_repo_tag: true 

# Deploy to PyPI if is a  tagged release 
on_success:
  - echo [distutils]                > %USERPROFILE%\\.pypirc
  - echo index-servers =           >> %USERPROFILE%\\.pypirc
  - echo     pypi                  >> %USERPROFILE%\\.pypirc
  - echo [pypi]                    >> %USERPROFILE%\\.pypirc
  - echo username=%PYPI_USERNAME%  >> %USERPROFILE%\\.pypirc
  - echo password=%PYPI_PASSWORD%  >> %USERPROFILE%\\.pypirc
  - set HOME=%USERPROFILE%
  - set PATH=%PYTHON_DIR%;%PYTHON_DIR%\Scripts;%PATH% 
  - cd %APPVEYOR_BUILD_FOLDER%\build
  - ps: >-      
      If ($env:APPVEYOR_REPO_TAG -eq "true") { 
         Invoke-Expression "twine upload --skip-existing install/dist/*.whl" 
      } 

