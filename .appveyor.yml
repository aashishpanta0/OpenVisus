version: '1.0.{build}'

notifications:
  - provider: Email
    to:
      - scrgiorgio@gmail.com
    on_build_success: true
    on_build_failure: true
    on_build_status_changed: true  
   
environment:
  QT5_DIR: C:/Qt/5.11.2/msvc2017_64
  APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
  CMAKE_GENERATOR: Visual Studio 15 2017 Win64
  DEPLOY_GITHUB: false
  DEPLOY_PYPI: false
  PYPI_USERNAME: scrgiorgio
  PYPI_PASSWORD:
    secure: 6DHH80JPNRCtIYxWc/h88Q==   
  matrix:
    - PYTHON_EXECUTABLE: C:/Python37-x64/python.exe 
      PYTHON_VERSION: 37
      DEFAULT_ENABLED: true  
    - PYTHON_EXECUTABLE: C:/Python36-x64/python.exe 
      PYTHON_VERSION: 36
      DEFAULT_ENABLED: false
  
# enable cache for vcpkg
cache: c:\tools\vcpkg\installed\  
  
# 
#if you need to debug uncomment these lines (see https://www.appveyor.com/docs/how-to/rdp-to-build-worker/)
#init:
#  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
#
#on_finish:
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))


init:
  - ps: | 
      If ($env:APPVEYOR_REPO_TAG -ne "" -or $env:APPVEYOR_REPO_COMMIT_MESSAGE.ToLower().Contains("[full_matrix]")) {
          $env:DEFAULT_ENABLED=true
      }
      If ($env:APPVEYOR_REPO_TAG -ne ""  -or  $env:APPVEYOR_REPO_COMMIT_MESSAGE.ToLower().Contains("[deploy_github]") ) {
      	$env:DEPLOY_GITHUB=1  
      }
      If ($env:APPVEYOR_REPO_TAG -ne ""  -or $env:APPVEYOR_REPO_COMMIT_MESSAGE.ToLower().Contains("[deploy_pypi]"  ) ) {
      	$env:DEPLOY_PYPI=1   
      } 
      If ($env:DEFAULT_ENABLED -eq "false") {
        Write-Host "Skipping build"
        Exit-AppveyorBuild
      }      

install:
  - choco install -y --allow-empty-checksums swig 

build_script:
  - cd %APPVEYOR_BUILD_FOLDER% 
  - .\build.bat 
  - echo [distutils]                                 > %USERPROFILE%\\.pypirc
  - echo index-servers =                            >> %USERPROFILE%\\.pypirc
  - echo     pypi                                   >> %USERPROFILE%\\.pypirc
  - echo [pypi]                                     >> %USERPROFILE%\\.pypirc
  - echo username = %PYPI_USERNAME%                 >> %USERPROFILE%\\.pypirc
  - echo password = %PYPI_PASSWORD%                 >> %USERPROFILE%\\.pypirc
  - set HOME=%USERPROFILE%
  - if "%DEPLOY_PYPI%"=="1" ( %PYTHON_EXECUTABLE% -m pip install --user --upgrade twine )
  - if "%DEPLOY_PYPI%"=="1" ( %PYTHON_EXECUTABLE% -m twine upload --skip-existing "build/install/dist/*.whl" ) 


# test are already in cmake
test: off

after_build:
  - ps: |
        If ( -not ($env:DEPLOY_GITHUB -eq 1) ) {
          Exit-AppveyorBuild
        }
   
artifacts:
    - path: .\build\install\dist\*.zip
      name: UploadToGitHubReleases
 
deploy:
  - provider: GitHub
    auth_token:
      secure: nwK8bGTRUynj+58b7E8Rgur5/0YvfIivBflFb5AaUrpC5BSTpcLbA4Ac+cCF6L4/
    artifact: UploadToGitHubReleases


