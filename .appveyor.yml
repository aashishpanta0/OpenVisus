version: '1.0.{build}'

notifications:
  - provider: Email
    to:
      - scrgiorgio@gmail.com
    on_build_success: true
    on_build_failure: true
    on_build_status_changed: true  
   
environment:
  APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019  
  matrix:
    - PYTHON_VERSION: 36    
    - PYTHON_VERSION: 37
    - PYTHON_VERSION: 38
 
build_script:
  - |-
    cd %APPVEYOR_BUILD_FOLDER% 
    
    set GIT_TAG=""
    git describe --tags --exact-match >tmp.txt 2>NUL
    if ERRORLEVEL == 0 ( set /p GIT_TAG=<tmp.txt )
    echo %GIT_TAG%    
    
    set PYTHONUNBUFFERED=1
    set Python_EXECUTABLE=C:\Python%PYTHON_VERSION%-x64\python.exe
    set Qt5_DIR=C:\Qt\5.9\msvc2017_64\lib\cmake\Qt5
    set MINICONDA=C:\Miniconda36-x64

    choco install -y --allow-empty-checksums swig
    set PATH=%Python_EXECUTABLE%\..;%PATH%
    python -m pip install numpy setuptools wheel twine --upgrade
  
    mkdir build_win
    cd build_win
    cmake.exe -G "Visual Studio 16 2019" -A "x64" -DQt5_DIR=%Qt5_DIR% -DPython_EXECUTABLE=%Python_EXECUTABLE%  ../
    cmake.exe --build . --target ALL_BUILD --config Release
    cmake.exe --build . --target INSTALL   --config Release

    cd Release\OpenVisus
    set PYTHONPATH=..\
    python -m OpenVisus test
    python -m OpenVisus convert
    set PYTHONPATH=
  
    python setup.py -q bdist_wheel --python-tag=cp%PYTHON_VERSION% --plat-name=win_amd64
    
    if NOT "%GIT_TAG%" == "" ( 
    	python -m twine upload --username %PYPI_USERNAME% --password %PYPI_PASSWORD% --skip-existing  "dist/*.whl" 
    )
  
    if "%PYTHON_VERSION%" == "38" appveyor exit
      
    set "PATH=%MINICONDA%\Scripts;%MINICONDA%\Library\bin;%PATH%"
    call %MINICONDA%\Scripts\activate.bat
    conda config --set always_yes yes --set changeps1 no --set anaconda_upload no
    conda update -q conda
    conda env remove -n tmp
    conda create -q -n tmp python=%PYTHON_VERSION:~0,1%.%PYTHON_VERSION:~1,1% numpy
    conda activate tmp
    conda install conda-build anaconda-client 
      
    set PYTHONPATH=..\
    python -m OpenVisus configure
    python -m OpenVisus test
    python -m OpenVisus convert
    set PYTHONPATH=
      
    python -c "import os,glob;[os.remove(it) for it in glob.glob(r'%MINICONDA%\**\openvisus*.tar.bz2',recursive=True)]"
    python setup.py -q bdist_conda 
    python -c "import glob;print(glob.glob(r'%MINICONDA%\**\openvisus*.tar.bz2', recursive=True)[0])" >tmp.txt 
    set /P CONDA_FILENAME=<tmp.txt
    echo "CONDA_FILENAME=%CONDA_FILENAME%"
    
    if NOT "%GIT_TAG%" == "" ( 
    	anaconda -t "%ANACONDA_TOKEN%" upload "%CONDA_FILENAME%" 
    )  

test: off

